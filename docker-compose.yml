---
version: "3.8"

# extension fields (x-..) indroduced with docker-compose syntax 3.4.
# Anything that does not start with x-.. is going to be rejected.
#
# format is [x-name]: [&anchor_name] [value]
#           Change as needed

# to deploy the service into a swarm mode, create a cluster and
# docker stack deploy --compose-file docker-compose.yml ubdc-airbnb

# App Config
x-airbnb-proxy: &X-AIRBNB-PROXY "http://b0e04b81eab04836979cbc1afd568d9e:@proxy.crawlera.com:8011/"

## CELERY Config
x-app-workers-per-instance: &X-WORKERS-PER-INSTANCE 1
x-celery-worker-prefetch-multiplier: &X-CELERY-WORKER-PREFETCH-MULTIPLIER 2
x-celery-task-default-rate-limit: &X-CELERY-DEFAULT-RATE-LIMIT '10/m'

# RABBITMQ Config
x-rabbitmq-host: &X-RABBITMQ_HOST "host.docker.internal"  # default: host.docker.internal (points at the host machine)
x-rabbitmq_username: &X-RABBITMQ_USERNAME "rabbit"
x-rabbitmq-password: &X-RABBITMQ-PASSWORD "carrot"
x-rabbitmq-port: &X-RABBITMQ-PORT 5672

# Database conf
x-database-host: &X-DATABASE-HOST "host.docker.internal"  # default: host.docker.internal (points at the host machine)
x-database-dbname: &X-DATABASE-DBNAME "postgres"
x-database-username: &X-DATABASE-USERNAME "postgres"
x-database-password: &X-DATABASE-PASSWORD "airbnb"
x-database-port: &X-DATABASE-PORT 5432


x-common-env: &common-env
  AIRBNB_PROXY: *X-AIRBNB-PROXY
  DJANGO_DEBUG: "False"
  WORKERS_PER_INSTANCE: *X-WORKERS-PER-INSTANCE
  CELERY_WORKER_PREFETCH_MULTIPLIER: *X-CELERY-WORKER-PREFETCH-MULTIPLIER
  CELERY_DEFAULT_RATE_LIMIT: *X-CELERY-DEFAULT-RATE-LIMIT
  RABBITMQ_HOST: *X-RABBITMQ_HOST
  RABBITMQ_PORT: *X-RABBITMQ-PORT
  RABBITMQ_USERNAME: *X-RABBITMQ_USERNAME
  RABBITMQ_PASSWORD: *X-RABBITMQ-PASSWORD


  DATABASE_DBNAME: *X-DATABASE-DBNAME
  DATABASE_HOST: *X-DATABASE-HOST
  DATABASE_PASSWORD: *X-DATABASE-PASSWORD
  DATABASE_PORT: *X-DATABASE-PORT
  DATABASE_USERNAME: *X-DATABASE-USERNAME


x-build-app: &build
  build:

    context: .
    dockerfile: ./docker/airbnb/Dockerfile

services:
  beat:
    deploy:
      replicas: 1
    image: ${UBDC_DOCKER_REGISTRY}ubdc/ubdc_beat:1.0.1
    <<: *build
    environment:
      <<: *common-env
      MODE: "beat"

  worker:
    deploy:
      replicas: 1
    image: ${UBDC_DOCKER_REGISTRY}ubdc/ubdc_worker:1.0.1
    <<: *build
    environment:
      <<: *common-env
      MODE: "worker"
